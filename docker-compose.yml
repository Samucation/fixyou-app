version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: "${DOCKER_POSTGRES_CONTAINER_NAME}"
    env_file:
      - .env
    environment:
      POSTGRES_DB: "${DOCKER_POSTGRES_DB_NAME}"
      POSTGRES_USER: "${JDBC_DATABASE_USERNAME}"
      POSTGRES_PASSWORD: "${JDBC_DATABASE_PASSWORD}"
    volumes:
      - fixyou-pgdata:/var/lib/postgresql/data
    ports:
      - "${DOCKER_POSTGRES_EXTERNAL_PORT}:5432"
    networks:
      - "${DOCKER_NETWORK}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: "${KEYCLOAK_IMAGE}"
    container_name: "${KEYCLOAK_CONTAINER_NAME}"
    command: ["start-dev", "--import-realm"]
    environment:
      KEYCLOAK_ADMIN: "${KEYCLOAK_ADMIN_USER}"
      KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASS}"
      KC_DB: "${KEYCLOAK_SCHEMA}"
      KC_DB_URL: "${KEYCLOAK_DB_URL}"
      KC_DB_USERNAME: "${KEYCLOAK_DB_USERNAME}"
      KC_DB_PASSWORD: "${JDBC_DATABASE_PASSWORD}"
      KC_HOSTNAME: "${KEYCLOAK_HOST_NAME}"
      KC_HOSTNAME_STRICT: "${KEYCLOAK_RESTRICT}"
    ports:
      - "${KEYCLOAK_DOCKER_EXTERNAL_PORT}:8080"
    depends_on:
      - postgres
    volumes:
      - ./application-docs/keycloak-data:/opt/keycloak/data
    networks:
      - "${DOCKER_NETWORK}"

  flyway:
    image: flyway/flyway:10
    container_name: "${DOCKER_FLYWAY_CONTAINER_NAME}"
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      -locations=filesystem:/flyway/sql
      -url=jdbc:postgresql://postgres:5432/m33_db
      -user=postgres
      -password=${JDBC_DATABASE_PASSWORD}
      -schemas=${DOCKER_FLYWAY_SCHEMA}
      migrate
    volumes:
      - ./registrations/src/main/resources/db/migration:/flyway/sql
    networks:
      - "${DOCKER_NETWORK}"

  api_fixyou:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "${API_FIXYOU_CONTAINER_NAME}"
    ports:
      - "${DOCKER_EXTERNAL_APP_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    env_file:
      - .env
    environment:
      ENV_FILE: .env
      ENV_PATH: /app/env
    volumes:
      - ./.env:/app/env/.env
    networks:
      - "${DOCKER_NETWORK}"

volumes:
  fixyou-pgdata:

networks:
  fixyou-network:
    driver: bridge
